/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SatstreamJavascriptSdk);
  }
}(this, function(expect, SatstreamJavascriptSdk) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GithubComSatstreamSsUtilsBitcoinCliFeeHorizonEstimate', function() {
      beforeEach(function() {
        instance = new SatstreamJavascriptSdk.GithubComSatstreamSsUtilsBitcoinCliFeeHorizonEstimate();
      });

      it('should create an instance of GithubComSatstreamSsUtilsBitcoinCliFeeHorizonEstimate', function() {
        // TODO: update the code to test GithubComSatstreamSsUtilsBitcoinCliFeeHorizonEstimate
        expect(instance).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsUtilsBitcoinCliFeeHorizonEstimate);
      });

      it('should have the property decay (base name: "decay")', function() {
        // TODO: update the code to test the property decay
        expect(instance).to.have.property('decay');
        // expect(instance.decay).to.be(expectedValueLiteral);
      });

      it('should have the property errors (base name: "errors")', function() {
        // TODO: update the code to test the property errors
        expect(instance).to.have.property('errors');
        // expect(instance.errors).to.be(expectedValueLiteral);
      });

      it('should have the property fail (base name: "fail")', function() {
        // TODO: update the code to test the property fail
        expect(instance).to.have.property('fail');
        // expect(instance.fail).to.be(expectedValueLiteral);
      });

      it('should have the property feerate (base name: "feerate")', function() {
        // TODO: update the code to test the property feerate
        expect(instance).to.have.property('feerate');
        // expect(instance.feerate).to.be(expectedValueLiteral);
      });

      it('should have the property pass (base name: "pass")', function() {
        // TODO: update the code to test the property pass
        expect(instance).to.have.property('pass');
        // expect(instance.pass).to.be(expectedValueLiteral);
      });

      it('should have the property scale (base name: "scale")', function() {
        // TODO: update the code to test the property scale
        expect(instance).to.have.property('scale');
        // expect(instance.scale).to.be(expectedValueLiteral);
      });

    });
  });

}));
