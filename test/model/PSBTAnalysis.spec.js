/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.66
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SatstreamJavascriptSdk);
  }
}(this, function(expect, SatstreamJavascriptSdk) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PSBTAnalysis', function() {
      beforeEach(function() {
        instance = new SatstreamJavascriptSdk.PSBTAnalysis();
      });

      it('should create an instance of PSBTAnalysis', function() {
        // TODO: update the code to test PSBTAnalysis
        expect(instance).to.be.a(SatstreamJavascriptSdk.PSBTAnalysis);
      });

      it('should have the property error (base name: "error")', function() {
        // TODO: update the code to test the property error
        expect(instance).to.have.property('error');
        // expect(instance.error).to.be(expectedValueLiteral);
      });

      it('should have the property estimatedFeerate (base name: "estimated_feerate")', function() {
        // TODO: update the code to test the property estimatedFeerate
        expect(instance).to.have.property('estimatedFeerate');
        // expect(instance.estimatedFeerate).to.be(expectedValueLiteral);
      });

      it('should have the property estimatedVsize (base name: "estimated_vsize")', function() {
        // TODO: update the code to test the property estimatedVsize
        expect(instance).to.have.property('estimatedVsize');
        // expect(instance.estimatedVsize).to.be(expectedValueLiteral);
      });

      it('should have the property fee (base name: "fee")', function() {
        // TODO: update the code to test the property fee
        expect(instance).to.have.property('fee');
        // expect(instance.fee).to.be(expectedValueLiteral);
      });

      it('should have the property inputs (base name: "inputs")', function() {
        // TODO: update the code to test the property inputs
        expect(instance).to.have.property('inputs');
        // expect(instance.inputs).to.be(expectedValueLiteral);
      });

      it('should have the property next (base name: "next")', function() {
        // TODO: update the code to test the property next
        expect(instance).to.have.property('next');
        // expect(instance.next).to.be(expectedValueLiteral);
      });

    });
  });

}));
