/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.66
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SatstreamJavascriptSdk);
  }
}(this, function(expect, SatstreamJavascriptSdk) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('BlockchainInfo', function() {
      beforeEach(function() {
        instance = new SatstreamJavascriptSdk.BlockchainInfo();
      });

      it('should create an instance of BlockchainInfo', function() {
        // TODO: update the code to test BlockchainInfo
        expect(instance).to.be.a(SatstreamJavascriptSdk.BlockchainInfo);
      });

      it('should have the property bestblockhash (base name: "bestblockhash")', function() {
        // TODO: update the code to test the property bestblockhash
        expect(instance).to.have.property('bestblockhash');
        // expect(instance.bestblockhash).to.be(expectedValueLiteral);
      });

      it('should have the property blocks (base name: "blocks")', function() {
        // TODO: update the code to test the property blocks
        expect(instance).to.have.property('blocks');
        // expect(instance.blocks).to.be(expectedValueLiteral);
      });

      it('should have the property chain (base name: "chain")', function() {
        // TODO: update the code to test the property chain
        expect(instance).to.have.property('chain');
        // expect(instance.chain).to.be(expectedValueLiteral);
      });

      it('should have the property chainwork (base name: "chainwork")', function() {
        // TODO: update the code to test the property chainwork
        expect(instance).to.have.property('chainwork');
        // expect(instance.chainwork).to.be(expectedValueLiteral);
      });

      it('should have the property difficulty (base name: "difficulty")', function() {
        // TODO: update the code to test the property difficulty
        expect(instance).to.have.property('difficulty');
        // expect(instance.difficulty).to.be(expectedValueLiteral);
      });

      it('should have the property headers (base name: "headers")', function() {
        // TODO: update the code to test the property headers
        expect(instance).to.have.property('headers');
        // expect(instance.headers).to.be(expectedValueLiteral);
      });

      it('should have the property mediantime (base name: "mediantime")', function() {
        // TODO: update the code to test the property mediantime
        expect(instance).to.have.property('mediantime');
        // expect(instance.mediantime).to.be(expectedValueLiteral);
      });

      it('should have the property time (base name: "time")', function() {
        // TODO: update the code to test the property time
        expect(instance).to.have.property('time');
        // expect(instance.time).to.be(expectedValueLiteral);
      });

    });
  });

}));
