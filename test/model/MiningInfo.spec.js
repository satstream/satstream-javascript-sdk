/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.66
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SatstreamJavascriptSdk);
  }
}(this, function(expect, SatstreamJavascriptSdk) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MiningInfo', function() {
      beforeEach(function() {
        instance = new SatstreamJavascriptSdk.MiningInfo();
      });

      it('should create an instance of MiningInfo', function() {
        // TODO: update the code to test MiningInfo
        expect(instance).to.be.a(SatstreamJavascriptSdk.MiningInfo);
      });

      it('should have the property blocks (base name: "blocks")', function() {
        // TODO: update the code to test the property blocks
        expect(instance).to.have.property('blocks');
        // expect(instance.blocks).to.be(expectedValueLiteral);
      });

      it('should have the property chain (base name: "chain")', function() {
        // TODO: update the code to test the property chain
        expect(instance).to.have.property('chain');
        // expect(instance.chain).to.be(expectedValueLiteral);
      });

      it('should have the property currentblocktx (base name: "currentblocktx")', function() {
        // TODO: update the code to test the property currentblocktx
        expect(instance).to.have.property('currentblocktx');
        // expect(instance.currentblocktx).to.be(expectedValueLiteral);
      });

      it('should have the property currentblockweight (base name: "currentblockweight")', function() {
        // TODO: update the code to test the property currentblockweight
        expect(instance).to.have.property('currentblockweight');
        // expect(instance.currentblockweight).to.be(expectedValueLiteral);
      });

      it('should have the property difficulty (base name: "difficulty")', function() {
        // TODO: update the code to test the property difficulty
        expect(instance).to.have.property('difficulty');
        // expect(instance.difficulty).to.be(expectedValueLiteral);
      });

      it('should have the property networkhashps (base name: "networkhashps")', function() {
        // TODO: update the code to test the property networkhashps
        expect(instance).to.have.property('networkhashps');
        // expect(instance.networkhashps).to.be(expectedValueLiteral);
      });

      it('should have the property pooledtx (base name: "pooledtx")', function() {
        // TODO: update the code to test the property pooledtx
        expect(instance).to.have.property('pooledtx');
        // expect(instance.pooledtx).to.be(expectedValueLiteral);
      });

      it('should have the property warnings (base name: "warnings")', function() {
        // TODO: update the code to test the property warnings
        expect(instance).to.have.property('warnings');
        // expect(instance.warnings).to.be(expectedValueLiteral);
      });

    });
  });

}));
