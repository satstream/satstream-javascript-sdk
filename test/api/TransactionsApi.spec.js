/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.66
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SatstreamJavascriptSdk);
  }
}(this, function(expect, SatstreamJavascriptSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SatstreamJavascriptSdk.TransactionsApi();
  });

  describe('(package)', function() {
    describe('TransactionsApi', function() {
      describe('combineRawTransaction', function() {
        it('should call combineRawTransaction successfully', function(done) {
          // TODO: uncomment, update parameter values for combineRawTransaction call and complete the assertions
          /*

          instance.combineRawTransaction(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.CombineRawTransactionResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('convertToPsbt', function() {
        it('should call convertToPsbt successfully', function(done) {
          // TODO: uncomment, update parameter values for convertToPsbt call and complete the assertions
          /*

          instance.convertToPsbt(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.ConvertToPSBTResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createRawTransaction', function() {
        it('should call createRawTransaction successfully', function(done) {
          // TODO: uncomment, update parameter values for createRawTransaction call and complete the assertions
          /*

          instance.createRawTransaction(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.CreateRawTransactionResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('decodeTxInscriptions', function() {
        it('should call decodeTxInscriptions successfully', function(done) {
          // TODO: uncomment, update parameter values for decodeTxInscriptions call and complete the assertions
          /*

          instance.decodeTxInscriptions(txid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.DecodeTransactionResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getRawTransaction', function() {
        it('should call getRawTransaction successfully', function(done) {
          // TODO: uncomment, update parameter values for getRawTransaction call and complete the assertions
          /*

          instance.getRawTransaction(txid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GetRawTransactionDecodeResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getRawTransactionHex', function() {
        it('should call getRawTransactionHex successfully', function(done) {
          // TODO: uncomment, update parameter values for getRawTransactionHex call and complete the assertions
          /*

          instance.getRawTransactionHex(txid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GetRawTransactionHexResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getRawTransactionPrevout', function() {
        it('should call getRawTransactionPrevout successfully', function(done) {
          // TODO: uncomment, update parameter values for getRawTransactionPrevout call and complete the assertions
          /*

          instance.getRawTransactionPrevout(txid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GetRawTransactionPrevoutResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getTxOut', function() {
        it('should call getTxOut successfully', function(done) {
          // TODO: uncomment, update parameter values for getTxOut call and complete the assertions
          /*

          instance.getTxOut(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GetTxOutResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getTxOutProof', function() {
        it('should call getTxOutProof successfully', function(done) {
          // TODO: uncomment, update parameter values for getTxOutProof call and complete the assertions
          /*

          instance.getTxOutProof(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GetTxOutProofResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getTxSpendingPrevout', function() {
        it('should call getTxSpendingPrevout successfully', function(done) {
          // TODO: uncomment, update parameter values for getTxSpendingPrevout call and complete the assertions
          /*

          instance.getTxSpendingPrevout(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GetTxSpendingPrevoutResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('sendRawTransaction', function() {
        it('should call sendRawTransaction successfully', function(done) {
          // TODO: uncomment, update parameter values for sendRawTransaction call and complete the assertions
          /*

          instance.sendRawTransaction(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.SendRawTransactionResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('verifyTxOutProof', function() {
        it('should call verifyTxOutProof successfully', function(done) {
          // TODO: uncomment, update parameter values for verifyTxOutProof call and complete the assertions
          /*

          instance.verifyTxOutProof(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.VerifyTxOutProofResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
