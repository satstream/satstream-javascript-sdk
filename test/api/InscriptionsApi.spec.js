/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SatstreamJavascriptSdk);
  }
}(this, function(expect, SatstreamJavascriptSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SatstreamJavascriptSdk.InscriptionsApi();
  });

  describe('(package)', function() {
    describe('InscriptionsApi', function() {
      describe('decodeTx', function() {
        it('should call decodeTx successfully', function(done) {
          // TODO: uncomment, update parameter values for decodeTx call and complete the assertions
          /*

          instance.decodeTx(txid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiTransactionResponsesDecodeResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('fetchInscriptionChild', function() {
        it('should call fetchInscriptionChild successfully', function(done) {
          // TODO: uncomment, update parameter values for fetchInscriptionChild call and complete the assertions
          /*

          instance.fetchInscriptionChild(inscriptionId, childIndex, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiInscriptionResponsesInscriptionResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('fetchInscriptions', function() {
        it('should call fetchInscriptions successfully', function(done) {
          // TODO: uncomment, update parameter values for fetchInscriptions call and complete the assertions
          /*

          instance.fetchInscriptions(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiInscriptionResponsesInscriptionResponse);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAddress', function() {
        it('should call getAddress successfully', function(done) {
          // TODO: uncomment, update parameter values for getAddress call and complete the assertions
          /*

          instance.getAddress(address, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiAddressResponsesAddressResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAddressUtxos', function() {
        it('should call getAddressUtxos successfully', function(done) {
          // TODO: uncomment, update parameter values for getAddressUtxos call and complete the assertions
          /*
          var opts = {};

          instance.getAddressUtxos(address, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiAddressResponsesOutputResponse);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getBlockByHeight', function() {
        it('should call getBlockByHeight successfully', function(done) {
          // TODO: uncomment, update parameter values for getBlockByHeight call and complete the assertions
          /*

          instance.getBlockByHeight(blockHeight, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiBlockResponsesBlockResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getBlockCount', function() {
        it('should call getBlockCount successfully', function(done) {
          // TODO: uncomment getBlockCount call and complete the assertions
          /*

          instance.getBlockCount(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiBlockResponsesBlockCountResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getBlockHashByHeight', function() {
        it('should call getBlockHashByHeight successfully', function(done) {
          // TODO: uncomment, update parameter values for getBlockHashByHeight call and complete the assertions
          /*

          instance.getBlockHashByHeight(blockHeight, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiBlockResponsesBlockHashResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getBlockInscriptions', function() {
        it('should call getBlockInscriptions successfully', function(done) {
          // TODO: uncomment, update parameter values for getBlockInscriptions call and complete the assertions
          /*

          instance.getBlockInscriptions(blockHeight, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiInscriptionResponsesLatestInscriptionsResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getBlocks', function() {
        it('should call getBlocks successfully', function(done) {
          // TODO: uncomment getBlocks call and complete the assertions
          /*

          instance.getBlocks(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiBlockResponsesBlocksResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getInscription', function() {
        it('should call getInscription successfully', function(done) {
          // TODO: uncomment, update parameter values for getInscription call and complete the assertions
          /*

          instance.getInscription(inscriptionId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiInscriptionResponsesInscriptionResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLatestBlockHeight', function() {
        it('should call getLatestBlockHeight successfully', function(done) {
          // TODO: uncomment getLatestBlockHeight call and complete the assertions
          /*

          instance.getLatestBlockHeight(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.ResponsesLatestBlockHeightResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLatestBlockhash', function() {
        it('should call getLatestBlockhash successfully', function(done) {
          // TODO: uncomment getLatestBlockhash call and complete the assertions
          /*

          instance.getLatestBlockhash(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.ResponsesLatestBlockHashResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLatestBlocktime', function() {
        it('should call getLatestBlocktime successfully', function(done) {
          // TODO: uncomment getLatestBlocktime call and complete the assertions
          /*

          instance.getLatestBlocktime(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.ResponsesLatestBlockTimeResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLatestInscriptions', function() {
        it('should call getLatestInscriptions successfully', function(done) {
          // TODO: uncomment getLatestInscriptions call and complete the assertions
          /*

          instance.getLatestInscriptions(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiInscriptionResponsesLatestInscriptionsResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLatestInscriptionsPage', function() {
        it('should call getLatestInscriptionsPage successfully', function(done) {
          // TODO: uncomment, update parameter values for getLatestInscriptionsPage call and complete the assertions
          /*

          instance.getLatestInscriptionsPage(page, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiInscriptionResponsesLatestInscriptionsResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLatestRunes', function() {
        it('should call getLatestRunes successfully', function(done) {
          // TODO: uncomment getLatestRunes call and complete the assertions
          /*

          instance.getLatestRunes(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiRuneResponsesRunesListResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLatestRunesPage', function() {
        it('should call getLatestRunesPage successfully', function(done) {
          // TODO: uncomment, update parameter values for getLatestRunesPage call and complete the assertions
          /*

          instance.getLatestRunesPage(page, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiRuneResponsesRunesListResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOutputByOutpoint', function() {
        it('should call getOutputByOutpoint successfully', function(done) {
          // TODO: uncomment, update parameter values for getOutputByOutpoint call and complete the assertions
          /*

          instance.getOutputByOutpoint(outpoint, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.ResponsesGetOutputByOutpointResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOutputs', function() {
        it('should call getOutputs successfully', function(done) {
          // TODO: uncomment, update parameter values for getOutputs call and complete the assertions
          /*

          instance.getOutputs(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(SatstreamJavascriptSdk.ResponsesGetOutputsResponse);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getRune', function() {
        it('should call getRune successfully', function(done) {
          // TODO: uncomment, update parameter values for getRune call and complete the assertions
          /*

          instance.getRune(runeName, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiRuneResponsesRuneResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSatoshi', function() {
        it('should call getSatoshi successfully', function(done) {
          // TODO: uncomment, update parameter values for getSatoshi call and complete the assertions
          /*

          instance.getSatoshi(_number, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiSatoshiResponsesSatoshiResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getStatus', function() {
        it('should call getStatus successfully', function(done) {
          // TODO: uncomment getStatus call and complete the assertions
          /*

          instance.getStatus(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiStatusResponsesStatusResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getTransaction', function() {
        it('should call getTransaction successfully', function(done) {
          // TODO: uncomment, update parameter values for getTransaction call and complete the assertions
          /*

          instance.getTransaction(txid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamJavascriptSdk.GithubComSatstreamSsApiServerApiTransactionResponsesTransactionResponse);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
