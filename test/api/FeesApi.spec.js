/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SatstreamApi);
  }
}(this, function(expect, SatstreamApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SatstreamApi.FeesApi();
  });

  describe('(package)', function() {
    describe('FeesApi', function() {
      describe('getRecommendedFees', function() {
        it('should call getRecommendedFees successfully', function(done) {
          // TODO: uncomment getRecommendedFees call and complete the assertions
          /*

          instance.getRecommendedFees(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SatstreamApi.InlineResponse2007);
            expect(data.data).to.be.a(SatstreamApi.ResponsesGetFeesResponse);
                  expect(data.data.confirmationBlocks).to.be.a('number');
              expect(data.data.confirmationBlocks).to.be(0);
              expect(data.data.feeRateInBtc).to.be.a('number');
              expect(data.data.feeRateInBtc).to.be();
            expect(data.githubComSatstreamSsApiServerApiBlocksResponsesBaseResponse).to.be.a(SatstreamApi.GithubComSatstreamSsApiServerApiBlocksResponsesBaseResponse);
                  expect(data.githubComSatstreamSsApiServerApiBlocksResponsesBaseResponse.code).to.be.a('number');
              expect(data.githubComSatstreamSsApiServerApiBlocksResponsesBaseResponse.code).to.be(0);
              expect(data.githubComSatstreamSsApiServerApiBlocksResponsesBaseResponse.data).to.be.a(Object);
              expect(data.githubComSatstreamSsApiServerApiBlocksResponsesBaseResponse.data).to.be();
              expect(data.githubComSatstreamSsApiServerApiBlocksResponsesBaseResponse.msg).to.be.a('string');
              expect(data.githubComSatstreamSsApiServerApiBlocksResponsesBaseResponse.msg).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
