/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GithubComSatstreamSsApiServerApiAddressesResponsesError', 'model/ResponsesGetAddressBalance', 'model/ResponsesGetAddressNonInscriptionUTXO', 'model/ResponsesGetAddressRuneBalance', 'model/ResponsesGetAddressRunesBalanceList', 'model/ResponsesGetAddressTimeframeBalance'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/GithubComSatstreamSsApiServerApiAddressesResponsesError'), require('../model/ResponsesGetAddressBalance'), require('../model/ResponsesGetAddressNonInscriptionUTXO'), require('../model/ResponsesGetAddressRuneBalance'), require('../model/ResponsesGetAddressRunesBalanceList'), require('../model/ResponsesGetAddressTimeframeBalance'));
  } else {
    // Browser globals (root is window)
    if (!root.SatstreamApi) {
      root.SatstreamApi = {};
    }
    root.SatstreamApi.AddressesApi = factory(root.SatstreamApi.ApiClient, root.SatstreamApi.GithubComSatstreamSsApiServerApiAddressesResponsesError, root.SatstreamApi.ResponsesGetAddressBalance, root.SatstreamApi.ResponsesGetAddressNonInscriptionUTXO, root.SatstreamApi.ResponsesGetAddressRuneBalance, root.SatstreamApi.ResponsesGetAddressRunesBalanceList, root.SatstreamApi.ResponsesGetAddressTimeframeBalance);
  }
}(this, function(ApiClient, GithubComSatstreamSsApiServerApiAddressesResponsesError, ResponsesGetAddressBalance, ResponsesGetAddressNonInscriptionUTXO, ResponsesGetAddressRuneBalance, ResponsesGetAddressRunesBalanceList, ResponsesGetAddressTimeframeBalance) {
  'use strict';

  /**
   * Addresses service.
   * @module api/AddressesApi
   * @version 1.0
   */

  /**
   * Constructs a new AddressesApi. 
   * @alias module:api/AddressesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getAddressBalance operation.
     * @callback module:api/AddressesApi~getAddressBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponsesGetAddressBalance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get address balance
     * Get the current balance of a Bitcoin address
     * @param {String} address Bitcoin address
     * @param {module:api/AddressesApi~getAddressBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponsesGetAddressBalance}
     */
    this.getAddressBalance = function(address, callback) {
      var postBody = null;

      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling getAddressBalance");
      }


      var pathParams = {
        'address': address
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiKeyAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResponsesGetAddressBalance;

      return this.apiClient.callApi(
        '/addresses/{address}/balance', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAddressNonInscriptionUtxos operation.
     * @callback module:api/AddressesApi~getAddressNonInscriptionUtxosCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponsesGetAddressNonInscriptionUTXO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get address non-inscription UTXOs
     * Get all non-inscription UTXOs for a Bitcoin address
     * @param {String} address Bitcoin address
     * @param {module:api/AddressesApi~getAddressNonInscriptionUtxosCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponsesGetAddressNonInscriptionUTXO}
     */
    this.getAddressNonInscriptionUtxos = function(address, callback) {
      var postBody = null;

      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling getAddressNonInscriptionUtxos");
      }


      var pathParams = {
        'address': address
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiKeyAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResponsesGetAddressNonInscriptionUTXO;

      return this.apiClient.callApi(
        '/addresses/{address}/utxos', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAddressRuneBalance operation.
     * @callback module:api/AddressesApi~getAddressRuneBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponsesGetAddressRuneBalance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get address rune balance
     * Get the balance of a specific rune for a Bitcoin address
     * @param {String} address Bitcoin address
     * @param {String} runeid Rune ID
     * @param {module:api/AddressesApi~getAddressRuneBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponsesGetAddressRuneBalance}
     */
    this.getAddressRuneBalance = function(address, runeid, callback) {
      var postBody = null;

      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling getAddressRuneBalance");
      }

      // verify the required parameter 'runeid' is set
      if (runeid === undefined || runeid === null) {
        throw new Error("Missing the required parameter 'runeid' when calling getAddressRuneBalance");
      }


      var pathParams = {
        'address': address,
        'runeid': runeid
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiKeyAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResponsesGetAddressRuneBalance;

      return this.apiClient.callApi(
        '/addresses/{address}/runes/{runeid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAddressRunesBalanceList operation.
     * @callback module:api/AddressesApi~getAddressRunesBalanceListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponsesGetAddressRunesBalanceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get address runes balance list
     * Get the balance of all runes for a Bitcoin address
     * @param {String} address Bitcoin address
     * @param {module:api/AddressesApi~getAddressRunesBalanceListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponsesGetAddressRunesBalanceList}
     */
    this.getAddressRunesBalanceList = function(address, callback) {
      var postBody = null;

      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling getAddressRunesBalanceList");
      }


      var pathParams = {
        'address': address
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiKeyAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResponsesGetAddressRunesBalanceList;

      return this.apiClient.callApi(
        '/addresses/{address}/runes', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAddressTimeframeBalance operation.
     * @callback module:api/AddressesApi~getAddressTimeframeBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponsesGetAddressTimeframeBalance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get address timeframe balance
     * Get the balance of a Bitcoin address for a specific timeframe
     * @param {String} address Bitcoin address
     * @param {module:model/String} timeframe Timeframe
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.token Token
     * @param {module:api/AddressesApi~getAddressTimeframeBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponsesGetAddressTimeframeBalance}
     */
    this.getAddressTimeframeBalance = function(address, timeframe, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'address' is set
      if (address === undefined || address === null) {
        throw new Error("Missing the required parameter 'address' when calling getAddressTimeframeBalance");
      }

      // verify the required parameter 'timeframe' is set
      if (timeframe === undefined || timeframe === null) {
        throw new Error("Missing the required parameter 'timeframe' when calling getAddressTimeframeBalance");
      }


      var pathParams = {
        'address': address
      };
      var queryParams = {
        'token': opts['token'],
        'timeframe': timeframe,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiKeyAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResponsesGetAddressTimeframeBalance;

      return this.apiClient.callApi(
        '/addresses/{address}/balance/timeframe', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
