/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import GithubComSatstreamSsUtilsRpcBtcTx from './GithubComSatstreamSsUtilsRpcBtcTx';

/**
 * The GithubComSatstreamSsUtilsRpcBlock model module.
 * @module model/GithubComSatstreamSsUtilsRpcBlock
 * @version 1.0.16
 */
export default class GithubComSatstreamSsUtilsRpcBlock {
  /**
   * Constructs a new <code>GithubComSatstreamSsUtilsRpcBlock</code>.
   * @alias module:model/GithubComSatstreamSsUtilsRpcBlock
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>GithubComSatstreamSsUtilsRpcBlock</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GithubComSatstreamSsUtilsRpcBlock} obj Optional instance to populate.
   * @return {module:model/GithubComSatstreamSsUtilsRpcBlock} The populated <code>GithubComSatstreamSsUtilsRpcBlock</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new GithubComSatstreamSsUtilsRpcBlock();
      if (data.hasOwnProperty('bits'))
        obj.bits = ApiClient.convertToType(data['bits'], 'String');
      if (data.hasOwnProperty('chainwork'))
        obj.chainwork = ApiClient.convertToType(data['chainwork'], 'String');
      if (data.hasOwnProperty('confirmations'))
        obj.confirmations = ApiClient.convertToType(data['confirmations'], 'Number');
      if (data.hasOwnProperty('difficulty'))
        obj.difficulty = ApiClient.convertToType(data['difficulty'], 'Number');
      if (data.hasOwnProperty('hash'))
        obj.hash = ApiClient.convertToType(data['hash'], 'String');
      if (data.hasOwnProperty('height'))
        obj.height = ApiClient.convertToType(data['height'], 'Number');
      if (data.hasOwnProperty('mediantime'))
        obj.mediantime = ApiClient.convertToType(data['mediantime'], 'Number');
      if (data.hasOwnProperty('merkleroot'))
        obj.merkleroot = ApiClient.convertToType(data['merkleroot'], 'String');
      if (data.hasOwnProperty('nTx'))
        obj.nTx = ApiClient.convertToType(data['nTx'], 'Number');
      if (data.hasOwnProperty('nonce'))
        obj.nonce = ApiClient.convertToType(data['nonce'], 'Number');
      if (data.hasOwnProperty('previousblockhash'))
        obj.previousblockhash = ApiClient.convertToType(data['previousblockhash'], 'String');
      if (data.hasOwnProperty('size'))
        obj.size = ApiClient.convertToType(data['size'], 'Number');
      if (data.hasOwnProperty('strippedSize'))
        obj.strippedSize = ApiClient.convertToType(data['strippedSize'], 'Number');
      if (data.hasOwnProperty('time'))
        obj.time = ApiClient.convertToType(data['time'], 'Number');
      if (data.hasOwnProperty('tx'))
        obj.tx = ApiClient.convertToType(data['tx'], [GithubComSatstreamSsUtilsRpcBtcTx]);
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'Number');
      if (data.hasOwnProperty('versionHex'))
        obj.versionHex = ApiClient.convertToType(data['versionHex'], 'String');
      if (data.hasOwnProperty('weight'))
        obj.weight = ApiClient.convertToType(data['weight'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {String} bits
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.bits = undefined;

/**
 * @member {String} chainwork
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.chainwork = undefined;

/**
 * @member {Number} confirmations
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.confirmations = undefined;

/**
 * @member {Number} difficulty
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.difficulty = undefined;

/**
 * @member {String} hash
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.hash = undefined;

/**
 * @member {Number} height
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.height = undefined;

/**
 * @member {Number} mediantime
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.mediantime = undefined;

/**
 * @member {String} merkleroot
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.merkleroot = undefined;

/**
 * @member {Number} nTx
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.nTx = undefined;

/**
 * @member {Number} nonce
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.nonce = undefined;

/**
 * @member {String} previousblockhash
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.previousblockhash = undefined;

/**
 * @member {Number} size
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.size = undefined;

/**
 * @member {Number} strippedSize
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.strippedSize = undefined;

/**
 * @member {Number} time
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.time = undefined;

/**
 * Txns will be stored in a separate collection in the DB
 * @member {Array.<module:model/GithubComSatstreamSsUtilsRpcBtcTx>} tx
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.tx = undefined;

/**
 * @member {Number} version
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.version = undefined;

/**
 * @member {String} versionHex
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.versionHex = undefined;

/**
 * @member {Number} weight
 */
GithubComSatstreamSsUtilsRpcBlock.prototype.weight = undefined;

