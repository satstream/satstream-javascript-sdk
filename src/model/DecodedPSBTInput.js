/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import Bip32Deriv from './Bip32Deriv';

/**
 * The DecodedPSBTInput model module.
 * @module model/DecodedPSBTInput
 * @version 1.0.21
 */
export default class DecodedPSBTInput {
  /**
   * Constructs a new <code>DecodedPSBTInput</code>.
   * @alias module:model/DecodedPSBTInput
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DecodedPSBTInput</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DecodedPSBTInput} obj Optional instance to populate.
   * @return {module:model/DecodedPSBTInput} The populated <code>DecodedPSBTInput</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DecodedPSBTInput();
      if (data.hasOwnProperty('bip32_derivs'))
        obj.bip32Derivs = ApiClient.convertToType(data['bip32_derivs'], {'String': Bip32Deriv});
      if (data.hasOwnProperty('final_scriptsig'))
        obj.finalScriptsig = ApiClient.convertToType(data['final_scriptsig'], Object);
      if (data.hasOwnProperty('final_scriptwitness'))
        obj.finalScriptwitness = ApiClient.convertToType(data['final_scriptwitness'], ['String']);
      if (data.hasOwnProperty('non_witness_utxo'))
        obj.nonWitnessUtxo = ApiClient.convertToType(data['non_witness_utxo'], Object);
      if (data.hasOwnProperty('partial_signatures'))
        obj.partialSignatures = ApiClient.convertToType(data['partial_signatures'], {'String': 'String'});
      if (data.hasOwnProperty('redeem_script'))
        obj.redeemScript = ApiClient.convertToType(data['redeem_script'], Object);
      if (data.hasOwnProperty('sighash'))
        obj.sighash = ApiClient.convertToType(data['sighash'], 'String');
      if (data.hasOwnProperty('unknown'))
        obj.unknown = ApiClient.convertToType(data['unknown'], {'String': Object});
      if (data.hasOwnProperty('witness_script'))
        obj.witnessScript = ApiClient.convertToType(data['witness_script'], Object);
      if (data.hasOwnProperty('witness_utxo'))
        obj.witnessUtxo = ApiClient.convertToType(data['witness_utxo'], Object);
    }
    return obj;
  }
}

/**
 * The BIP32 derivation paths
 * @member {Object.<String, module:model/Bip32Deriv>} bip32Derivs
 */
DecodedPSBTInput.prototype.bip32Derivs = undefined;

/**
 * The final script sig
 * @member {Object} finalScriptsig
 */
DecodedPSBTInput.prototype.finalScriptsig = undefined;

/**
 * The final script witness
 * @member {Array.<String>} finalScriptwitness
 */
DecodedPSBTInput.prototype.finalScriptwitness = undefined;

/**
 * Decoded network transaction for non-witness UTXOs
 * @member {Object} nonWitnessUtxo
 */
DecodedPSBTInput.prototype.nonWitnessUtxo = undefined;

/**
 * The public key and signature pairs
 * @member {Object.<String, String>} partialSignatures
 */
DecodedPSBTInput.prototype.partialSignatures = undefined;

/**
 * The redeem script
 * @member {Object} redeemScript
 */
DecodedPSBTInput.prototype.redeemScript = undefined;

/**
 * The sighash type to be used
 * @member {String} sighash
 */
DecodedPSBTInput.prototype.sighash = undefined;

/**
 * Unknown fields
 * @member {Object.<String, Object>} unknown
 */
DecodedPSBTInput.prototype.unknown = undefined;

/**
 * The witness script
 * @member {Object} witnessScript
 */
DecodedPSBTInput.prototype.witnessScript = undefined;

/**
 * Transaction output for witness UTXOs
 * @member {Object} witnessUtxo
 */
DecodedPSBTInput.prototype.witnessUtxo = undefined;

