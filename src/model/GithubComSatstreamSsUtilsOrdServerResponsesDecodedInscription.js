/*
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import GithubComSatstreamSsUtilsOrdServerResponsesInscriptionData from './GithubComSatstreamSsUtilsOrdServerResponsesInscriptionData';

/**
 * The GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription model module.
 * @module model/GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription
 * @version 1.0.19
 */
export default class GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription {
  /**
   * Constructs a new <code>GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription</code>.
   * @alias module:model/GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription} obj Optional instance to populate.
   * @return {module:model/GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription} The populated <code>GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription();
      if (data.hasOwnProperty('input'))
        obj.input = ApiClient.convertToType(data['input'], 'Number');
      if (data.hasOwnProperty('offset'))
        obj.offset = ApiClient.convertToType(data['offset'], 'Number');
      if (data.hasOwnProperty('payload'))
        obj.payload = GithubComSatstreamSsUtilsOrdServerResponsesInscriptionData.constructFromObject(data['payload']);
      if (data.hasOwnProperty('pushnum'))
        obj.pushnum = ApiClient.convertToType(data['pushnum'], 'Boolean');
      if (data.hasOwnProperty('stutter'))
        obj.stutter = ApiClient.convertToType(data['stutter'], 'Boolean');
    }
    return obj;
  }
}

/**
 * @member {Number} input
 */
GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription.prototype.input = undefined;

/**
 * @member {Number} offset
 */
GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription.prototype.offset = undefined;

/**
 * @member {module:model/GithubComSatstreamSsUtilsOrdServerResponsesInscriptionData} payload
 */
GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription.prototype.payload = undefined;

/**
 * @member {Boolean} pushnum
 */
GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription.prototype.pushnum = undefined;

/**
 * @member {Boolean} stutter
 */
GithubComSatstreamSsUtilsOrdServerResponsesDecodedInscription.prototype.stutter = undefined;

